services:
  users_app:
    build:
      context: ./users/docker
      dockerfile: Dockerfile
    container_name: users_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./users:/var/www
    networks:
      - common_network

  users_web:
    image: nginx:alpine
    container_name: users_web
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./users:/var/www
      - ./users/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - common_network

  notifications_app:
    build:
      context: ./notifications/docker
      dockerfile: Dockerfile
    container_name: notifications_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./notifications:/var/www
    networks:
      - common_network

  notifications_web:
    image: nginx:alpine
    container_name: notifications_web
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./notifications:/var/www
      - ./notifications/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - common_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: nextbasket
      MYSQL_PASSWORD: root
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - common_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: common_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - common_network

networks:
  common_network:
    driver: bridge

volumes:
  mysql_data:
